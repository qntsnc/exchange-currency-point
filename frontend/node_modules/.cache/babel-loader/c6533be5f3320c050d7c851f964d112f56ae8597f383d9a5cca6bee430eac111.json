{"ast":null,"code":"import _objectSpread from\"/Users/qntsnc/GolandProjects/exchange-point/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ClientsPage=()=>{const[clients,setClients]=useState([]);const[newClient,setNewClient]=useState({passport_number:'',full_name:'',phone_number:''});const[error,setError]=useState('');const[loading,setLoading]=useState(false);const[formError,setFormError]=useState('');const fetchClients=useCallback(async()=>{setLoading(true);setError('');try{const response=await fetch('http://localhost:8080/api/v1/clients');if(!response.ok){const errData=await response.json();throw new Error(errData.message||\"Network response was not ok (\".concat(response.status,\")\"));}const data=await response.json();setClients(data.data||[]);}catch(err){setError('Ошибка загрузки клиентов: '+err.message);console.error(err);}finally{setLoading(false);}},[]);useEffect(()=>{fetchClients();},[fetchClients]);const handleInputChange=e=>{const{name,value}=e.target;setNewClient(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));};const handleSubmit=async e=>{e.preventDefault();setFormError('');if(!newClient.passport_number.trim()||!newClient.full_name.trim()){setFormError('Номер паспорта и ФИО обязательны для заполнения.');return;}setLoading(true);try{const response=await fetch('http://localhost:8080/api/v1/clients',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(newClient)});if(!response.ok){const errData=await response.json();throw new Error(errData.message||\"Network response was not ok (\".concat(response.status,\")\"));}setNewClient({passport_number:'',full_name:'',phone_number:''});fetchClients();}catch(err){setFormError('Ошибка создания клиента: '+err.message);console.error(err);}finally{setLoading(false);}};const formatDate=dateTimeStr=>{if(!dateTimeStr)return'Не указано';try{// Если dateTimeStr это объект с полем Time, извлекаем значение Time\nif(typeof dateTimeStr==='object'&&dateTimeStr!==null){if(dateTimeStr.Time){dateTimeStr=dateTimeStr.Time;}else{// Если нет поля Time, но есть Valid, возможно это NullTime из Go\nif(dateTimeStr.Valid===false){return'Не указано';}// Попробуем преобразовать объект в строку\ndateTimeStr=String(dateTimeStr);}}// Если dateTimeStr это строка\nif(typeof dateTimeStr==='string'){// Обработка формата ISO 8601 с Z в конце и микросекундами\nconst isoRegex=/^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2})(\\.\\d+)?([+-]\\d{2}:\\d{2}|Z)?$/;const match=dateTimeStr.match(isoRegex);if(match){// Уже валидный ISO формат, можем использовать напрямую\nconst date=new Date(dateTimeStr);return date.toLocaleString('ru-RU');}// Проверяем формат \"YYYY-MM-DD HH:MM:SS\"\nconst dateMatch=dateTimeStr.match(/(\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2})/);if(dateMatch){const cleanedDate=dateMatch[1].replace(' ','T');const date=new Date(cleanedDate);if(!isNaN(date.getTime())){return date.toLocaleString('ru-RU');}}}// Если все специальные проверки не сработали, пробуем просто создать Date\nconst date=new Date(dateTimeStr);if(!isNaN(date.getTime())){return date.toLocaleString('ru-RU');}// Если ничего не сработало\nreturn'Некорректная дата';}catch(error){console.error('Ошибка обработки даты:',error);return'Ошибка даты';}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u041A\\u043B\\u0438\\u0435\\u043D\\u0442\\u044B\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"h3\",{children:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[formError&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:formError}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"passport_number\",children:\"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043F\\u0430\\u0441\\u043F\\u043E\\u0440\\u0442\\u0430:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"passport_number\",type:\"text\",name:\"passport_number\",value:newClient.passport_number,onChange:handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"full_name\",children:\"\\u0424\\u0418\\u041E:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"full_name\",type:\"text\",name:\"full_name\",value:newClient.full_name,onChange:handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"phone_number\",children:\"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"phone_number\",type:\"text\",name:\"phone_number\",value:newClient.phone_number,onChange:handleInputChange})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?'Добавление...':'Добавить клиента'})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432\"}),loading&&/*#__PURE__*/_jsx(\"p\",{className:\"loading-message\",children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432...\"}),!loading&&clients.length===0&&/*#__PURE__*/_jsx(\"p\",{children:\"\\u041D\\u0435\\u0442 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F.\"}),!loading&&clients.length>0&&/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u0424\\u0418\\u041E\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043F\\u0430\\u0441\\u043F\\u043E\\u0440\\u0442\\u0430\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u0414\\u0430\\u0442\\u0430 \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:clients.map(client=>{var _client$phone_number;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:client.id}),/*#__PURE__*/_jsx(\"td\",{children:client.full_name}),/*#__PURE__*/_jsx(\"td\",{children:client.passport_number}),/*#__PURE__*/_jsx(\"td\",{children:((_client$phone_number=client.phone_number)===null||_client$phone_number===void 0?void 0:_client$phone_number.String)||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(client.created_at)})]},client.id);})})]})]});};export default ClientsPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsx","_jsx","jsxs","_jsxs","ClientsPage","clients","setClients","newClient","setNewClient","passport_number","full_name","phone_number","error","setError","loading","setLoading","formError","setFormError","fetchClients","response","fetch","ok","errData","json","Error","message","concat","status","data","err","console","handleInputChange","e","name","value","target","prev","_objectSpread","handleSubmit","preventDefault","trim","method","headers","body","JSON","stringify","formatDate","dateTimeStr","Time","Valid","String","isoRegex","match","date","Date","toLocaleString","dateMatch","cleanedDate","replace","isNaN","getTime","children","className","onSubmit","htmlFor","id","type","onChange","required","disabled","length","map","client","_client$phone_number","created_at"],"sources":["/Users/qntsnc/GolandProjects/exchange-point/frontend/src/pages/ClientsPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nconst ClientsPage = () => {\n  const [clients, setClients] = useState([]);\n  const [newClient, setNewClient] = useState({ passport_number: '', full_name: '', phone_number: '' });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [formError, setFormError] = useState('');\n\n  const fetchClients = useCallback(async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('http://localhost:8080/api/v1/clients');\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.message || `Network response was not ok (${response.status})`);\n      }\n      const data = await response.json();\n      setClients(data.data || []);\n    } catch (err) {\n      setError('Ошибка загрузки клиентов: ' + err.message);\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchClients();\n  }, [fetchClients]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewClient(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setFormError('');\n    if (!newClient.passport_number.trim() || !newClient.full_name.trim()) {\n        setFormError('Номер паспорта и ФИО обязательны для заполнения.');\n        return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8080/api/v1/clients', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(newClient)\n      });\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.message || `Network response was not ok (${response.status})`);\n      }\n      setNewClient({ passport_number: '', full_name: '', phone_number: '' });\n      fetchClients();\n    } catch (err) {\n      setFormError('Ошибка создания клиента: ' + err.message);\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatDate = (dateTimeStr) => {\n  if (!dateTimeStr) return 'Не указано';\n  \n  try {\n    // Если dateTimeStr это объект с полем Time, извлекаем значение Time\n    if (typeof dateTimeStr === 'object' && dateTimeStr !== null) {\n      if (dateTimeStr.Time) {\n        dateTimeStr = dateTimeStr.Time;\n      } else {\n        // Если нет поля Time, но есть Valid, возможно это NullTime из Go\n        if (dateTimeStr.Valid === false) {\n          return 'Не указано';\n        }\n        // Попробуем преобразовать объект в строку\n        dateTimeStr = String(dateTimeStr);\n      }\n    }\n    \n    // Если dateTimeStr это строка\n    if (typeof dateTimeStr === 'string') {\n      // Обработка формата ISO 8601 с Z в конце и микросекундами\n      const isoRegex = /^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2})(\\.\\d+)?([+-]\\d{2}:\\d{2}|Z)?$/;\n      const match = dateTimeStr.match(isoRegex);\n      \n      if (match) {\n        // Уже валидный ISO формат, можем использовать напрямую\n        const date = new Date(dateTimeStr);\n        return date.toLocaleString('ru-RU');\n      }\n      \n      // Проверяем формат \"YYYY-MM-DD HH:MM:SS\"\n      const dateMatch = dateTimeStr.match(/(\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2})/);\n      if (dateMatch) {\n        const cleanedDate = dateMatch[1].replace(' ', 'T');\n        const date = new Date(cleanedDate);\n        if (!isNaN(date.getTime())) {\n          return date.toLocaleString('ru-RU');\n        }\n      }\n    }\n    \n    // Если все специальные проверки не сработали, пробуем просто создать Date\n    const date = new Date(dateTimeStr);\n    if (!isNaN(date.getTime())) {\n      return date.toLocaleString('ru-RU');\n    }\n    \n    // Если ничего не сработало\n    return 'Некорректная дата';\n  } catch (error) {\n    console.error('Ошибка обработки даты:', error);\n    return 'Ошибка даты';\n  }\n};\n\n  return (\n    <div>\n      <h2>Клиенты</h2>\n      {error && <p className=\"error-message\">{error}</p>}\n      \n      <h3>Добавить нового клиента</h3>\n      <form onSubmit={handleSubmit}>\n        {formError && <p className=\"error-message\">{formError}</p>}\n        <div>\n          <label htmlFor=\"passport_number\">Номер паспорта:</label>\n          <input id=\"passport_number\" type=\"text\" name=\"passport_number\" value={newClient.passport_number} onChange={handleInputChange} required />\n        </div>\n        <div>\n          <label htmlFor=\"full_name\">ФИО:</label>\n          <input id=\"full_name\" type=\"text\" name=\"full_name\" value={newClient.full_name} onChange={handleInputChange} required />\n        </div>\n        <div>\n          <label htmlFor=\"phone_number\">Номер телефона:</label>\n          <input id=\"phone_number\" type=\"text\" name=\"phone_number\" value={newClient.phone_number} onChange={handleInputChange} />\n        </div>\n        <button type=\"submit\" disabled={loading}>{loading ? 'Добавление...' : 'Добавить клиента'}</button>\n      </form>\n\n      <h3>Список клиентов</h3>\n      {loading && <p className=\"loading-message\">Загрузка списка клиентов...</p>}\n      {!loading && clients.length === 0 && <p>Нет клиентов для отображения.</p>}\n      {!loading && clients.length > 0 && (\n        <table>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>ФИО</th>\n              <th>Номер паспорта</th>\n              <th>Телефон</th>\n              <th>Дата регистрации</th>\n            </tr>\n          </thead>\n          <tbody>\n            {clients.map(client => (\n              <tr key={client.id}>\n                <td>{client.id}</td>\n                <td>{client.full_name}</td>\n                <td>{client.passport_number}</td>\n                <td>{client.phone_number?.String || 'N/A'}</td>\n                <td>{formatDate(client.created_at)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default ClientsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}